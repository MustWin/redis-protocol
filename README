Copyright 2012 Sam Pullara

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

The Redis client in this repository is faster, in my tests, than the redis-benchmark application that comes with Redis.
Still smoothing out the edges.

Description of each module:

client/
  Leverages the protocol module for encoding and decoding. Supports both synchronous
  and asynchronous pipelined requests from the RedisClient.
clientgen/
  Scrapes the redis.io/commands page and produces the typed Java client and the
  Finagle-based Scala client.
finagle/
  Based on the Netty codec, this provides a Finagle based client.
native/
  An experiment in combination with spullara/redis allows you to start up a Redis
  instance in a Java process and call it directly through JNI.
netty/
  A channel buffer based protocol implementation wrapped in a Netty codec. I am
  currently trying to push this upstream to Netty as a default codec.
protocol/
  Redis protocol encoder / decoder based on input/outputstreams. This is the
  fastest implementation if blocking i/o is ok for your use case.
server/
  Very, very rough, incomplete Java based Redis clone. Do not use.

